{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\wools\\\\GitHub\\\\RecipeWebsite\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\wools\\\\github\\\\recipewebsite\\\\src\\\\RecipeQuery.js\";\nimport React, { useState, useEffect } from 'react';\nimport Recipe from './Recipe';\nimport style from \"./assets/css/recipequery.module.css\";\n\nfunction RecipeQuery(props) {\n  const APP_ID = \"bde76692\";\n  const APP_KEY = \"a779c707df0015efad7cf8cee3391fe1\";\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        recipes = _useState2[0],\n        setRecipes = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        search = _useState4[0],\n        setSearch = _useState4[1];\n\n  const _useState5 = useState('chocolate'),\n        _useState6 = _slicedToArray(_useState5, 2),\n        query = _useState6[0],\n        setQuery = _useState6[1];\n\n  function handleErrors(response) {\n    if (!response.ok) {\n      throw Error(response.statusText);\n    }\n  }\n\n  useEffect(() => {\n    async function getRecipes() {\n      await fetch(\"https://api.edamam.com/search?q=\".concat(query, \"&app_id=\").concat(APP_ID, \"&app_key=\").concat(APP_KEY).concat(props.append)).then(function (response) {\n        if (response.ok) {\n          const data = response.json();\n          console.log(data);\n          setRecipes(data.hits);\n        } else {\n          return;\n        }\n      });\n    }\n\n    getRecipes();\n  }, [props, query]);\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n    console.log(search);\n  };\n\n  const getSearch = e => {\n    //prevent refreshing page when every time a character is entered in the search bar\n    e.preventDefault();\n    setQuery(search);\n  };\n\n  return React.createElement(\"div\", {\n    src: style,\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    src: style,\n    onSubmit: getSearch,\n    className: \"search-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    src: style.input,\n    type: \"text\",\n    value: search,\n    onChange: updateSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"search-button\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Search\")), React.createElement(\"div\", {\n    className: \"recipes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, recipes.map(recipe => React.createElement(Recipe, {\n    title: recipe.recipe.label,\n    calories: recipe.recipe.calories,\n    image: recipe.recipe.image,\n    ingredients: recipe.recipe.ingredients,\n    url: recipe.recipe.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }))));\n}\n\nexport default RecipeQuery;","map":{"version":3,"sources":["C:/Users/wools/github/recipewebsite/src/RecipeQuery.js"],"names":["React","useState","useEffect","Recipe","style","RecipeQuery","props","APP_ID","APP_KEY","recipes","setRecipes","search","setSearch","query","setQuery","handleErrors","response","ok","Error","statusText","getRecipes","fetch","append","then","data","json","console","log","hits","updateSearch","e","target","value","getSearch","preventDefault","input","map","recipe","label","calories","image","ingredients","url"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Recipe from './Recipe';\r\nimport style from \"./assets/css/recipequery.module.css\"\r\n\r\n\r\nfunction RecipeQuery(props) {\r\n\r\n    const APP_ID = \"bde76692\";\r\n    const APP_KEY = \"a779c707df0015efad7cf8cee3391fe1\";\r\n\r\n    const [recipes, setRecipes] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n    const [query, setQuery] = useState('chocolate');\r\n\r\n    function handleErrors(response) {\r\n        if (!response.ok) {\r\n            throw Error(response.statusText);\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n      async function getRecipes() {\r\n          await fetch(\r\n              `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}${props.append}`\r\n          ).then(function(response) {\r\n            if (response.ok) {\r\n                const data = response.json();\r\n                console.log(data);\r\n                setRecipes(data.hits);\r\n            } else {\r\n                return;\r\n            }\r\n          });\r\n      }\r\n      getRecipes();\r\n    }, [props, query]);\r\n\r\n    const updateSearch = e => {\r\n    setSearch(e.target.value);\r\n    console.log(search)\r\n    }\r\n\r\n    const getSearch = e => {\r\n    //prevent refreshing page when every time a character is entered in the search bar\r\n    e.preventDefault();\r\n    setQuery(search);\r\n    }\r\n\r\n    return (\r\n        <div src= {style} className=\"App\">\r\n            <form src= {style} onSubmit={getSearch} className=\"search-form\">\r\n                <input src={style.input}\r\n                type = \"text\" \r\n                value={search} \r\n                onChange={updateSearch}\r\n                />\r\n                <button className=\"search-button\" type=\"submit\">Search</button>\r\n            </form>\r\n            <div className=\"recipes\">\r\n                {recipes.map(recipe => (\r\n                <Recipe \r\n                title={recipe.recipe.label} \r\n                calories={recipe.recipe.calories}\r\n                image={recipe.recipe.image}\r\n                ingredients={recipe.recipe.ingredients}\r\n                url={recipe.recipe.url} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RecipeQuery;"]},"metadata":{},"sourceType":"module"}